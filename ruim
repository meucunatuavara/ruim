local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local Camera = workspace.CurrentCamera
local Teams = game:GetService("Teams")
local Drawing = Drawing or nil

local localPlayer = Players.LocalPlayer
local target = nil
local aiming = false
local guiVisible = false
local selectedTeam = nil

local aimKey = Enum.UserInputType.MouseButton2
local toggleGUIKey = Enum.KeyCode.Zero
local fovRadius = 50
local predictionFactor = 0.05
local showDistance = true

local fovCircle = Drawing.new("Circle")
fovCircle.Visible = false
fovCircle.Color = Color3.new(1, 1, 0)
fovCircle.Thickness = 2
fovCircle.Filled = false
fovCircle.Radius = fovRadius
fovCircle.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)

local screenGui = Instance.new("ScreenGui", game.CoreGui)
screenGui.Name = "AimbotConfig"
screenGui.Enabled = false

local frame = Instance.new("Frame", screenGui)
frame.AnchorPoint = Vector2.new(0.5, 0.5)
frame.Position = UDim2.new(0.5, 0, 0.5, 0)
frame.Size = UDim2.new(0, 300, 0, 250)
frame.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
frame.BackgroundTransparency = 0.1
frame.BorderSizePixel = 0
frame.Visible = false

local title = Instance.new("TextLabel", frame)
title.Text = "Aimbot Configurations"
title.Font = Enum.Font.SourceSansBold
title.TextSize = 20
title.TextColor3 = Color3.new(1, 1, 1)
title.Size = UDim2.new(1, -20, 0, 40)
title.Position = UDim2.new(0, 10, 0, 5)
title.BackgroundTransparency = 1

local fovLabel = Instance.new("TextLabel", frame)
fovLabel.Text = "FOV Radius: " .. fovRadius
fovLabel.Font = Enum.Font.SourceSans
fovLabel.TextSize = 16
fovLabel.TextColor3 = Color3.new(1, 1, 1)
fovLabel.Size = UDim2.new(1, -20, 0, 30)
fovLabel.Position = UDim2.new(0, 10, 0, 50)
fovLabel.BackgroundTransparency = 1

local fovSlider = Instance.new("TextButton", frame)
fovSlider.Text = "Adjust FOV"
fovSlider.Font = Enum.Font.SourceSans
fovSlider.TextSize = 14
fovSlider.TextColor3 = Color3.new(1, 1, 1)
fovSlider.Size = UDim2.new(0.8, 0, 0, 30)
fovSlider.Position = UDim2.new(0.1, 0, 0.3, 0)
fovSlider.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)

fovSlider.MouseButton1Click:Connect(function()
    fovRadius = fovRadius + 10
    if fovRadius > 300 then
        fovRadius = 50
    end
    fovLabel.Text = "FOV Radius: " .. fovRadius
    fovCircle.Radius = fovRadius
end)

local predictionLabel = Instance.new("TextLabel", frame)
predictionLabel.Text = "Prediction Factor: " .. predictionFactor
predictionLabel.Font = Enum.Font.SourceSans
predictionLabel.TextSize = 16
predictionLabel.TextColor3 = Color3.new(1, 1, 1)
predictionLabel.Size = UDim2.new(1, -20, 0, 30)
predictionLabel.Position = UDim2.new(0, 10, 0, 90)
predictionLabel.BackgroundTransparency = 1

local predictionSlider = Instance.new("TextButton", frame)
predictionSlider.Text = "Adjust Prediction"
predictionSlider.Font = Enum.Font.SourceSans
predictionSlider.TextSize = 14
predictionSlider.TextColor3 = Color3.new(1, 1, 1)
predictionSlider.Size = UDim2.new(0.8, 0, 0, 30)
predictionSlider.Position = UDim2.new(0.1, 0, 0.5, 0)
predictionSlider.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)

predictionSlider.MouseButton1Click:Connect(function()
    predictionFactor = predictionFactor + 0.05
    if predictionFactor > 0.5 then
        predictionFactor = 0
    end
    predictionLabel.Text = "Prediction Factor: " .. predictionFactor
end)

local teamDropdown = Instance.new("TextButton", frame)
teamDropdown.Text = "Select Team: Global"
teamDropdown.Font = Enum.Font.SourceSans
teamDropdown.TextSize = 14
teamDropdown.TextColor3 = Color3.new(1, 1, 1)
teamDropdown.Size = UDim2.new(0.8, 0, 0, 30)
teamDropdown.Position = UDim2.new(0.1, 0, 0.7, 0)
teamDropdown.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)

local function updateTeamDropdown()
    local teamNames = {"Global"}
    for _, team in ipairs(Teams:GetTeams()) do
        table.insert(teamNames, team.Name)
    end

    local currentIndex = 1
    teamDropdown.MouseButton1Click:Connect(function()
        currentIndex = (currentIndex % #teamNames) + 1
        selectedTeam = (teamNames[currentIndex] == "Global") and nil or Teams:FindFirstChild(teamNames[currentIndex])
        teamDropdown.Text = "Select Team: " .. teamNames[currentIndex]
    end)
end

updateTeamDropdown()

local function isInFOV(player)
    if player.Character and player.Character:FindFirstChild("Head") then
        local head = player.Character.Head
        local screenPos, onScreen = Camera:WorldToViewportPoint(head.Position)
        local mousePos = UserInputService:GetMouseLocation()
        return (Vector2.new(screenPos.X, screenPos.Y) - mousePos).Magnitude <= fovRadius
    end
    return false
end

local function getClosestTarget()
    local closestPlayer, closestDistance = nil, math.huge
    local mousePos = UserInputService:GetMouseLocation()

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= localPlayer and (not selectedTeam or player.Team == selectedTeam) and player.Character and player.Character:FindFirstChild("Head") then
            local head = player.Character.Head
            local screenPos, onScreen = Camera:WorldToViewportPoint(head.Position)
            local distance = (Vector2.new(screenPos.X, screenPos.Y) - mousePos).Magnitude
            if distance < closestDistance and distance <= fovRadius then
                closestPlayer = player
                closestDistance = distance
            end
        end
    end
    return closestPlayer
end

local function aimAtTarget()
    if target and target.Character and target.Character:FindFirstChild("Head") then
        local head = target.Character.Head
        local velocity = target.Character:FindFirstChild("HumanoidRootPart").Velocity or Vector3.zero
        local predictedPosition = head.Position + velocity * predictionFactor

        local smoothness = 0.3
        local targetCFrame = CFrame.lookAt(Camera.CFrame.Position, predictedPosition)
        Camera.CFrame = Camera.CFrame:Lerp(targetCFrame, smoothness)
    end
end

UserInputService.InputBegan:Connect(function(input)
    if input.UserInputType == aimKey then
        aiming = true
        target = getClosestTarget()
    elseif input.KeyCode == toggleGUIKey then
        guiVisible = not guiVisible
        screenGui.Enabled = guiVisible
        frame.Visible = guiVisible
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == aimKey then
        aiming = false
        target = nil
    end
end)

RunService.RenderStepped:Connect(function()
    fovCircle.Position = UserInputService:GetMouseLocation()
    if aiming and target then
        aimAtTarget()
    end
end)
